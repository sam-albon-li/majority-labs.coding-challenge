name: CI
on: push

jobs:
  test-api:
    name: Test API
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache
        uses: actions/cache@v2.1.5
        with:
          path: vendor/bundle-docker
          key: bundler-${{ hashFiles('Dockerfile') }}-${{ hashFiles('Gemfile', 'Gemfile.lock') }}
          restore-keys: |
            bundler-${{ hashFiles('Dockerfile') }}-${{ hashFiles('Gemfile', 'Gemfile.lock') }}
            bundler-${{ hashFiles('Dockerfile') }}-
      - name: Build & Test
        run: |
          docker-compose build
          docker-compose run api sh -c "bundle install && yarn install --check-files && bundle exec rails db:setup && bundle exec rspec"

  test-web:
    name: Test Web
    runs-on: ubuntu-latest
    container: node:12.8.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache
        uses: actions/cache@v2.1.5
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile --non-interactive
      - name: Test
        run: yarn test
